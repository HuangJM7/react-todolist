{"version":3,"sources":["config/history.ts","config/axios.ts","config/appKey.ts","component/SignUp/SignUp.tsx","component/LogIn/LogIn.tsx","Redux/actions/todos.ts","Redux/actionTypes.ts","component/Todos/TodoInput.tsx","component/Todos/TodoItem.tsx","component/Tomatoes/CountDown.tsx","component/Todos/Todos.tsx","component/Tomatoes/TomatoAction.tsx","component/Tomatoes/TomatoList.tsx","component/Tomatoes/Tomatoes.tsx","Redux/actions/tomatoes.ts","component/Statistics/Polygon.tsx","component/Statistics/TodoHistory/TodoHistoryTodoItem.tsx","component/Statistics/TodoHistory/TodoHistory.tsx","component/Statistics/Statistics.tsx","component/Home/Home.tsx","serviceWorker.ts","Redux/reducers/index.ts","Redux/reducers/todos.ts","Redux/reducers/tomatoes.ts","Redux/Store.ts","index.tsx","App.tsx"],"names":["publicUrl","history","createBrowserHistory","basename","instance","axios","create","baseURL","headers","interceptors","request","use","config","xToken","localStorage","getItem","error","console","Promise","reject","response","setItem","status","log","push","SignUp","props","onChange","key","value","temp","setState","submit","a","state","account","password","passwordConformation","post","password_confirmation","then","res","catch","err","alert","this","className","id","allowClear","placeholder","prefix","type","style","color","e","target","Password","onClick","to","React","LogIn","updateTodo","payload","TodoInput","onKeyUp","keyCode","addTodo","description","data","resource","Error","suffix","mapDispatchToProps","connect","ownProps","TodoItem","params","completed","completed_at","Date","put","editTodo","onkeyUp","editText","onEnter","Editing","theme","deleted","Text","onDoubleClick","classnames","editing","padding","checked","timerId","Panel","Collapse","Todos","unCompletedTodos","map","t","bordered","header","completedTodos","todos","filter","unDeleteTodos","CountDown","countDown","timer","setInterval","time","document","title","onFinish","clearInterval","percent","duration","width","min","Math","floor","second","confirm","Modal","TomatoAction","updateTomato","ended_at","forceUpdate","showConfirm","onOk","abortTomato","onCancel","cancelText","okText","aborted","unfinishedTomato","html","undefined","startTomato","startedAt","parse","started_at","timeNow","getTime","TomatoItem","format","TomatoList","list","dates","d","tomatoes","finishedTomatoes","length","Object","keys","sort","b","splice","Tomatoes","addTomato","_","groupBy","tometo","Polygon","point","firstDay","finishedY","range","finishedCount","pointArr","date","x","y","totalFinishedCount","join","viewBox","preserveAspectRatio","fill","stroke","stroke-width","points","TodoHistoryTodoItem","todo","action","formatText","itemType","updated_at","finished","created_at","TabPane","Tabs","TodoHistory","finishedTodos","dailyFinishedTodos","finishedTodoList","finishedDates","deletedTodoList","deletedTodos","defaultActiveKey","tab","Statistics","dailyTodos","delete","getTodos","get","resources","assign","initTodos","getTomatoes","initTomatoes","getMe","user","logout","menu","Item","Button","overlay","icon","Boolean","window","location","hostname","match","combineReducers","store","createStore","rootReducer","ReactDOM","render","path","component","Home","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.206cabb7.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history'\r\n\r\n\r\nconst ENV = process.env.NODE_ENV;//环境模式\r\nlet publicUrl: string = '';\r\n\r\n//根据环境确定路径\r\nif (ENV === 'development') {\r\n    publicUrl = '/';\r\n} else if (ENV === 'production') {\r\n    publicUrl = '/react-todolist/build';\r\n}\r\n\r\n//前端路由\r\nconst history = createBrowserHistory({\r\n    basename: publicUrl//配置基链接\r\n});\r\n\r\nexport default history;\r\n\r\n\r\n","import axios from 'axios';\r\nimport  history from './history'\r\n\r\nimport { appID,appSecret } from './appKey'\r\n\r\n//生成axios实例,配置URL及验证headers\r\nconst instance = axios.create({\r\n    baseURL: 'https://gp-server.hunger-valley.com/',\r\n    headers: {\r\n        't-app-id': appID,\r\n        't-app-secret': appSecret\r\n    }\r\n});\r\n\r\ninstance.interceptors.request.use(function (config) {\r\n    const xToken = localStorage.getItem('x-token')//读取JWT\r\n    if (xToken) {\r\n        config.headers['Authorization'] = `Bearer ${xToken}`\r\n    }\r\n    return config;\r\n}, function (error) {\r\n    console.error(error)\r\n    return Promise.reject(error);\r\n});\r\n\r\n\r\ninstance.interceptors.response.use(function (response) {\r\n    if (response.headers['x-token']) {//保存JWT\r\n        localStorage.setItem('x-token', response.headers['x-token'])\r\n    }\r\n    return response;\r\n}, function (error) {\r\n    if (error.response.status === 401) {\r\n        console.log('重定向');\r\n        history.push(\"/LogIn\")//跳转登录页\r\n    }\r\n    return Promise.reject(error);\r\n});\r\n\r\nexport default instance","const appID = \"D6wiWSq4HHEr4r6byqNR4ZbW\"\r\nconst appSecret = \"7AzZnpadyu4Xbgq73tLmoGz9\"\r\n\r\nexport  {appID,appSecret};","import * as React from \"react\"\r\nimport { Input, Icon, Button } from 'antd';\r\nimport 'antd/dist/antd.css'; // or 'antd/dist/antd.less'\r\nimport axios from \"../../config/axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./SignUp.scss\"\r\n\r\ninterface TSignUpState {\r\n    account?: string,\r\n    password?: string,\r\n    passwordConformation?: string\r\n}\r\n\r\n\r\nclass SignUp extends React.Component<any, TSignUpState> {\r\n    constructor(props: any) {\r\n        super(props)\r\n        this.state = {\r\n            account: '',\r\n            password: '',\r\n            passwordConformation: ''\r\n        }\r\n    }\r\n    onChange = (key: keyof TSignUpState, value: string) => {\r\n        const temp: TSignUpState = {}\r\n        temp[key] = value\r\n        console.log(temp);\r\n        this.setState(temp)\r\n\r\n    }\r\n    submit = async () => {\r\n        const { account, password, passwordConformation } = this.state\r\n\r\n        try {\r\n            await axios.post(\"sign_up/user\", {\r\n                account,\r\n                password,\r\n                password_confirmation: passwordConformation\r\n            }).then((res) => {\r\n                this.props.history.push(\"/\")//登录成功跳转主页面\r\n            }).catch((err) => {\r\n                console.log(err);\r\n                alert(err)\r\n                this.setState({ password: '', passwordConformation: '' })\r\n\r\n            })\r\n\r\n        } catch (error) {\r\n\r\n            alert(error.account)\r\n            this.setState({ password: '', passwordConformation: '' })\r\n            // throw new Error(error)\r\n        }\r\n    }\r\n    public render() {\r\n        const { account, password, passwordConformation } = this.state;\r\n        return (\r\n            <div className=\"signUp\" id=\"SignUp\">\r\n                <h1>React todo-lis注册</h1>\r\n                <Input\r\n                    id=\"account\"\r\n                    allowClear\r\n                    placeholder=\"输入用户名 \"\r\n                    prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                    value={account}\r\n                    onChange={(e) => { this.onChange(\"account\", e.target.value) }}\r\n                />\r\n                <Input.Password id=\"password\" value={password} placeholder=\"输入密码\" onChange={(e) => { this.onChange(\"password\", e.target.value) }} />\r\n                <Input.Password id=\"passwordConformation\" value={passwordConformation} placeholder=\"确认密码\" onChange={(e) => { this.onChange(\"passwordConformation\", e.target.value) }} />\r\n                <Button className=\"SignUpButton\" type=\"primary\" onClick={this.submit}>注册</Button>\r\n                <p>如果你有账号,请  <Link to=\"/LogIn\">登录</Link></p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SignUp;","import * as React from \"react\"\r\nimport { Input, Icon, Button } from 'antd';\r\nimport 'antd/dist/antd.css'; // or 'antd/dist/antd.less'\r\nimport axios from \"../../config/axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Login.scss\"\r\n\r\ninterface TSLogInState {\r\n    account?: string,\r\n    password?: string,\r\n}\r\n\r\n\r\nclass LogIn extends React.Component<any, TSLogInState> {\r\n    constructor(props: any) {\r\n        super(props)\r\n        this.state = {\r\n            account: '',\r\n            password: '',\r\n        }\r\n    }\r\n    onChange = (key: keyof TSLogInState, value: string) => {\r\n        const temp: TSLogInState = {}\r\n        temp[key] = value\r\n        this.setState(temp)\r\n\r\n    }\r\n    submit = async () => {\r\n        const { account, password, } = this.state\r\n        try {\r\n            await axios.post(\"sign_in/user\", {\r\n                account,\r\n                password\r\n            }).then(() => {\r\n                this.props.history.push(\"/\")//登录成功跳转主页面\r\n            }).catch((err) => {\r\n                console.log(err);\r\n                alert(\"用户名或密码错误\")\r\n                this.setState({ password: '' })\r\n\r\n            })\r\n            // this.props.history.push(\"/\")//登录成功跳转主页面\r\n\r\n        } catch (error) {\r\n            // throw new Error(error)\r\n        }\r\n    }\r\n    public render() {\r\n        const { account, password } = this.state;\r\n        return (\r\n            <div className=\"LogIn\" id=\"LogIn\">\r\n                <h1>React todo-list登录</h1>\r\n                <Input\r\n                    allowClear\r\n                    placeholder=\"输入用户名 \"\r\n                    prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                    value={account}\r\n                    onChange={(e) => { this.onChange(\"account\", e.target.value) }}\r\n                />\r\n                <Input.Password value={password} onChange={(e) => { this.onChange(\"password\", e.target.value) }} placeholder=\"输入密码\" />\r\n                <Button className=\"LogInButton\" type=\"primary\" onClick={this.submit}>登录</Button>\r\n                <p>如果你没有账号,请  <Link to=\"/SignUp\">注册</Link></p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LogIn;","import { ADD_TODO, INIT_TODOS, UPDATE_TODO, EDIT_TODO } from \"../actionTypes\";\r\n\r\nexport const addTodo = (payload: any) => {\r\n    return {\r\n        type: ADD_TODO,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const initTodos = (payload: any[]) => {\r\n    return {\r\n        type: INIT_TODOS,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const updateTodo = (payload: any) => {\r\n    return {\r\n        type: UPDATE_TODO,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const editTodo = (payload: number) => {\r\n    return {\r\n        type: EDIT_TODO,\r\n        payload\r\n    }\r\n}","export const ADD_TODO = 'ADD_TODO'\r\nexport const INIT_TODOS = 'INIT_TODOS'\r\nexport const UPDATE_TODO = 'UPDATE_TODO'\r\nexport const EDIT_TODO = 'EDIT_TODO'\r\n\r\nexport const ADD_TOMATO = 'ADD_TOMATO'\r\nexport const UPDATE_TOMATO = 'UPDATE_TOMATO'\r\nexport const INIT_TOMATOES = 'INIT_TOMATOES'","import * as React from \"react\"\r\nimport { connect } from 'react-redux';\r\nimport { Input, Icon, Dropdown } from 'antd';\r\nimport 'antd/dist/antd.css'; // or 'antd/dist/antd.less'\r\nimport axios from \"../../config/axios\";\r\nimport { addTodo } from  \"../../Redux/actions/todos\";\r\n\r\n\r\nclass TodoInput extends React.Component<any, any>{\r\n    constructor(props: any) {\r\n        super(props)\r\n        this.state = {\r\n            description: ''\r\n        }\r\n    }\r\n    onKeyUp = (e: any) => {\r\n        if (e.keyCode === 13) {\r\n            this.addTodo()\r\n        }\r\n    }\r\n    addTodo = async () => {\r\n        try {\r\n            if (this.state.description !== '') {\r\n                // this.props.addTodo({ description: this.state.description })//调用父组件传递的事件handler\r\n                const response = await axios.post('todos', { description: this.state.description })\r\n                this.props.addTodo(response.data.resource)//更新store\r\n            }\r\n        } catch (e) {\r\n            throw new Error(e)\r\n        }\r\n        this.setState({ description: '' })//input置空\r\n\r\n    }\r\n\r\n    public render() {\r\n        const { description } = this.state;\r\n        //判断input内容存在与否,保存JSX变量\r\n        const suffix = description ? <Icon type=\"enter\" onClick={this.addTodo} /> : <span />;\r\n        return (\r\n            <div className=\"TodoInput\" id=\"TodoInput\">\r\n                <Input\r\n                    placeholder=\"添加新任务\"\r\n                    suffix={suffix}\r\n                    value={description}\r\n                    onChange={(e) => this.setState({ description: e.target.value })}\r\n                    onKeyUp={this.onKeyUp}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: any, ownProps: any) => ({\r\n    ...ownProps\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    addTodo\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoInput);","import * as React from \"react\"\r\nimport { Icon, Checkbox } from 'antd';\r\nimport 'antd/dist/antd.css'; // or 'antd/dist/antd.less'\r\nimport axios from \"../../config/axios\";\r\nimport classnames from 'classnames'\r\nimport './TodoItem.scss'\r\nimport { connect } from 'react-redux';\r\nimport { editTodo, updateTodo } from \"../../Redux/actions/todos\";\r\n\r\nclass TodoItem extends React.Component<any, any>{\r\n    constructor(props: any) {\r\n        super(props)\r\n        this.state = {\r\n            editText: this.props.description,//input初始值\r\n        }\r\n    }\r\n\r\n    updateTodo = async (params: any) => {\r\n        if (params.completed) {\r\n            params.completed_at = new Date();\r\n        }\r\n        try {\r\n            const response = await axios.put(`todos/${this.props.id}`, params)//请求接口数据\r\n            this.props.updateTodo(response.data.resource)//更新store数据\r\n        } catch (e) {\r\n            throw new Error(e)\r\n        }\r\n    }\r\n    editTodo = () => {\r\n        this.props.editTodo(this.props.id)//item进入编辑模式,显示Input框\r\n    }\r\n\r\n    // update = (params: any) => {\r\n    //     this.props.update(this.props.id, params)\r\n\r\n    // }\r\n    // toEditing = () => {\r\n    //     this.props.toEditing(this.props.id)\r\n    // }\r\n\r\n\r\n    onkeyUp = (e: any) => {\r\n        if (e.keyCode === 13 && this.state.editText !== \"\") {\r\n            // this.update({ description: this.state.editText })//调用父组件传递的事件handler\r\n            this.updateTodo({ description: this.state.editText })//更新store数据\r\n        }\r\n    }\r\n    onEnter = () => {\r\n        if (this.state.editText !== \"\") {\r\n            // this.update({ description: this.state.editText })\r\n            this.updateTodo({ description: this.state.editText })//更新store数据\r\n        }\r\n    }\r\n\r\n\r\n    public render() {\r\n        const Editing = <span className=\"editing\">\r\n            <input type=\"text\" value={this.state.editText}\r\n                onChange={e => { this.setState({ editText: e.target.value }) }}\r\n                onKeyUp={this.onkeyUp}\r\n            />\r\n            <span>\r\n                <Icon type=\"enter\" onClick={this.onEnter} />\r\n                <Icon type=\"delete\" theme='filled'\r\n                    onClick={e => { this.updateTodo({ deleted: true }) }} />\r\n            </span>\r\n\r\n        </span>\r\n\r\n        const Text = <span className=\"text\" onDoubleClick={this.editTodo}>{this.props.description}</span>\r\n        return (\r\n            <div className={classnames({\r\n                TodoItem: true,\r\n                editing: this.props.editing,\r\n                completed: this.props.completed\r\n            })} id=\"TodoItem\" >\r\n                <Checkbox\r\n                    style={{ padding: '0 4px' }}\r\n                    checked={this.props.completed}\r\n                    onChange={e => this.updateTodo({ completed: e.target.checked })} />\r\n\r\n                {this.props.editing ? Editing : Text}\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: any, ownProps: any) => ({\r\n    ...ownProps\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    editTodo,\r\n    updateTodo\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoItem);","import * as React from 'react';\r\nimport './CountDown.scss'\r\n\r\ninterface ICountDownProps {\r\n\ttimer: number;\r\n\tduration: number;\r\n\tonFinish: () => void;\r\n}\r\n\r\ninterface ICountDownState {\r\n\tcountDown: number;\r\n}\r\n\r\nlet timerId:NodeJS.Timeout\r\n\r\nclass CountDown extends React.Component<ICountDownProps,ICountDownState> {\r\n\tconstructor(props:any){\r\n\t\tsuper(props)\r\n\t\tthis.state = {\r\n\t\t\tcountDown: this.props.timer\r\n\t\t}\r\n\t}\r\n\r\n\tget countDown(){\r\n\t\tconst min = Math.floor(this.state.countDown/1000/60)\r\n\t\tconst second = Math.floor(this.state.countDown/1000%60)\r\n\t\treturn `${min<10?`0${min}`:min}:${second<10?`0${second}`:second}`\r\n\t}\r\n\r\n\tcomponentDidMount(){\r\n\t\ttimerId = setInterval(()=>{\r\n\t\t\tconst time = this.state.countDown\r\n\t\t\tthis.setState({countDown: time - 1000})\r\n\t\t\tdocument.title = `${this.countDown} - React todolist`;\r\n\t\t\tif(time < 1000){\r\n\t\t\t\tdocument.title = 'React todolist';\r\n\t\t\t\tthis.props.onFinish()\r\n\t\t\t\tclearInterval(timerId)\r\n\t\t\t}\r\n\t\t},1000)\r\n\t}\r\n\r\n\tcomponentWillUnmount(){\r\n\t\tclearInterval(timerId)\r\n\t}\r\n\r\n\tpublic render() {\r\n\t\tconst percent = 1 - this.state.countDown/this.props.duration\r\n\t\treturn (\r\n\t\t\t<div className=\"CountDown\" id=\"CountDown\">\r\n\t\t\t\t<span className=\"restTime\">{this.countDown}</span>\r\n\t\t\t\t<div className=\"progress\" style={{width: `${percent*100}%`}}/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default CountDown;","import * as React from \"react\"\r\nimport { Collapse } from 'antd';\r\nimport 'antd/dist/antd.css'; // or 'antd/dist/antd.less'\r\nimport {  updateTodo } from \"../../Redux/actions/todos\";\r\nimport axios from \"../../config/axios\";\r\nimport TodoInput from \"./TodoInput\"\r\nimport TodoItem from './TodoItem'\r\nimport './Todos.scss'\r\nimport { connect } from 'react-redux';\r\n\r\nconst { Panel } = Collapse;\r\n\r\n\r\nclass Todos extends React.Component<any, any>{\r\n    constructor(props: any) {\r\n        super(props)\r\n        //旧数据保存在Todos.state中\r\n        // this.state = {\r\n        //     todos: []\r\n        // }\r\n    }\r\n    \r\n    get unDeleteTodos() {\r\n        return this.props.todos.filter((t: any) => { return !t.deleted })\r\n    }\r\n    get unCompletedTodos() {\r\n        return this.unDeleteTodos.filter((t: any) => { return !t.completed })\r\n    }\r\n    get completedTodos() {\r\n        return this.unDeleteTodos.filter((t: any) => { return t.completed })\r\n    }\r\n\r\n    //新的数据获取函数,将数据保存在store中\r\n    //todo数据初始化在Home进行\r\n    // getTodos = async () => {\r\n    //     try {\r\n    //         const response = await axios.get('todos')\r\n    //         const todos = response.data.resources.map((t: any) => Object.assign({}, t, { editing: false }))\r\n    //         this.props.initTodos(todos)//\r\n    //     } catch (e) {\r\n    //         // throw new Error(e)\r\n    //     }\r\n    // }\r\n    //旧的数据获取函数,将数据保存在todos的state中\r\n    // getTodo = async () => {\r\n    //     try {\r\n    //         let response = await axios.get('todos')\r\n    //         const todos = response.data.resources.map((t: any) => Object.assign({}, t, { editing: false }))\r\n    //         this.setState({ todos: todos })\r\n    //     } catch (e) {\r\n    //         throw new Error(e)\r\n    //     }\r\n    // }\r\n    //本地数据保存在父组件,通过props传递函数变动数据\r\n    // addTodo = async (params: any) => {\r\n    //     const { todos } = this.state\r\n    //     try {\r\n    //         const response = await axios.post(\"todos\", params)\r\n    //         this.setState({ todos: [response.data.resource, ...todos] })\r\n    //     } catch (e) {\r\n    //         throw new Error(e)\r\n    //     }\r\n    // }\r\n    // updaTodo = async (id: any, params: any) => {\r\n    //     const { todos } = this.state\r\n    //     try {\r\n    //         const response = await axios.put(`todos/${id}`, params)\r\n    //         let newTodos = todos.map((t: any) => {\r\n    //             if (id === t.id) {\r\n    //                 return response.data.resource\r\n    //             } else {\r\n    //                 return t\r\n    //             }\r\n    //         })\r\n    //         this.setState({ todos: newTodos })\r\n    //     } catch (e) {\r\n    //         // throw new Error(e)\r\n    //     }\r\n    // }\r\n    // toEditing = (id: number) => {\r\n    //     const { todos } = this.state\r\n    //     const newTodos = todos.map((t: any) => {\r\n    //         if (id === t.id) {\r\n    //             return Object.assign({}, t, { editing: true })\r\n    //         } else {\r\n    //             return Object.assign({}, t, { editing: false })\r\n    //         }\r\n    //     })\r\n    //     this.setState({ todos: newTodos })\r\n    // }\r\n\r\n\r\n    public render() {\r\n        return (\r\n            <div className=\"Todos\" id=\"Todos\">\r\n                <TodoInput ></TodoInput>\r\n                <main>\r\n                    {\r\n                        this.unCompletedTodos.map((t: any) => {\r\n                            return <TodoItem key={t.id}{...t}\r\n                            />\r\n                        })\r\n                    }\r\n                    <Collapse  bordered={false}  >\r\n                        <Panel header=\"已完成任务\" key=\"1\">\r\n                            <p>{\r\n                                this.completedTodos.map((t: any) => {\r\n                                    return <TodoItem key={t.id}{...t}\r\n                                    />\r\n                                })\r\n                            }</p>\r\n                        </Panel>\r\n                    </Collapse>\r\n\r\n                </main>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state: any, ownProps: any) => {//绑定store的state到props中\r\n    return {\r\n        todos: state.todos,\r\n        ...ownProps\r\n    }\r\n}\r\nconst mapDispatchToProps = {//绑定dispatch函数到props中\r\n    // initTodos,//数据初始化在home组件进行\r\n    updateTodo\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Todos);","import * as React from 'react';\r\nimport { Button, Modal, Input, Icon } from \"antd\"\r\nimport axios from '../../config/axios'\r\nimport CountDown from './CountDown'\r\nimport './TomatoAction.scss'\r\n// import CountDown from './CountDownHook'\r\n\r\ninterface ITomatoActionProps {\r\n    startTomato: () => void;\r\n    updateTomato: (payload: any) => void;\r\n    unfinishedTomato: any;\r\n}\r\n\r\ninterface ITomatoActionState {\r\n    description: string;\r\n}\r\n\r\nconst confirm = Modal.confirm;\r\n\r\nclass TomatoAction extends React.Component<ITomatoActionProps, ITomatoActionState> {\r\n    constructor(props:any) {\r\n        super(props)\r\n        this.state = {\r\n            description: ''\r\n        }\r\n    }\r\n\r\n    onKeyUp = (e:any) => {\r\n        if (e.keyCode === 13 && this.state.description !== '') {\r\n            this.updateTomato({\r\n                description: this.state.description,\r\n                ended_at: new Date()\r\n            })\r\n            this.setState({ description: '' })\r\n        }\r\n    }\r\n\r\n    onFinish = () => {\r\n        this.forceUpdate()\r\n    }\r\n\r\n    showConfirm = () => {\r\n        confirm({\r\n            title: '您目前正在一个番茄工作时间中，要放弃这个番茄吗？',\r\n            onOk: () => {\r\n                this.abortTomato()\r\n            },\r\n            onCancel() {\r\n                console.log('取消');\r\n            },\r\n            cancelText: '取消',\r\n            okText: '确定',\r\n        });\r\n    }\r\n\r\n    abortTomato = () => {\r\n        this.updateTomato({ aborted: true })\r\n        document.title = 'React todolist';\r\n    }\r\n\r\n    updateTomato = async (params: any) => {\r\n        try {\r\n            const response = await axios.put(`tomatoes/${this.props.unfinishedTomato.id}`, params)\r\n            this.props.updateTomato(response.data.resource)\r\n        } catch (e) {\r\n            throw new Error(e)\r\n        }\r\n    }\r\n\r\n    public render() {\r\n        let html = <div />\r\n        if (this.props.unfinishedTomato === undefined) {\r\n            html = <Button className=\"startTomatoButton\" onClick={() => { this.props.startTomato() }}>开始番茄</Button>\r\n        } else {\r\n            const startedAt = Date.parse(this.props.unfinishedTomato.started_at)\r\n            const duration = this.props.unfinishedTomato.duration\r\n            const timeNow = new Date().getTime()\r\n            if (timeNow - startedAt > duration) {\r\n                html = <div className=\"inputWrapper\">\r\n                    <Input value={this.state.description}\r\n                        placeholder=\"请输入你刚刚完成的任务\"\r\n                        onChange={e => this.setState({ description: e.target.value })}\r\n                        onKeyUp={e => this.onKeyUp(e)}\r\n                    />\r\n                    <Icon type=\"close-circle\" className=\"abort\"\r\n                        onClick={this.showConfirm}\r\n                    />\r\n                </div>\r\n            } else if (timeNow - startedAt < duration) {\r\n                const timer = duration - timeNow + startedAt\r\n                html = (\r\n                    <div className=\"countDownWrapper\">\r\n                        <CountDown timer={timer} duration={duration}\r\n                            onFinish={this.onFinish} />\r\n                        <Icon type=\"close-circle\" className=\"abort\"\r\n                            onClick={this.showConfirm} />\r\n                    </div>\r\n                )\r\n            }\r\n        }\r\n        return (\r\n            <div className=\"TomatoAction\" id=\"TomatoAction\">\r\n                {html}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TomatoAction;","import * as React from 'react';\r\nimport { format } from 'date-fns'\r\nimport './TomatoList.scss'\r\n\r\n\r\n\r\nconst TomatoItem = function (props) {\r\n\treturn (\r\n\t\t<div className=\"TomatoItem\">\r\n\t\t\t<span className=\"timeRange\">{format(new Date(props.started_at), 'H:mm')} - {format(new Date(props.ended_at), 'H:mm')}</span>\r\n\t\t\t{/* <span className=\"timeRange\">{props.started_at} - {props.ended_at}</span> */}\r\n\t\t\t<span className=\"description\">{props.description}</span>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nclass TomatoList extends React.Component<any, any> {\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t}\r\n\r\n\tget dates() {\r\n\t\tconst dates = Object.keys(this.props.finishedTomatoes)\r\n\t\treturn dates.sort((a, b) => Date.parse(b) - Date.parse(a)).splice(0, 3)\r\n\t}\r\n\r\n\tpublic render() {\r\n\t\tconst list = this.dates.map(d => {\r\n\t\t\tconst tomatoes = this.props.finishedTomatoes[d]\r\n\t\t\treturn (\r\n\t\t\t\t<div key={d} className=\"dailyTomatoes\">\r\n\t\t\t\t\t<div className=\"title\">\r\n\t\t\t\t\t\t<span className=\"dateTime\">{format(new Date(d), 'M月dd日')}</span>\r\n\t\t\t\t\t\t{/* <span className=\"dateTime\">{d}</span> */}\r\n\t\t\t\t\t\t<span className=\"finishedCount\">完成了{tomatoes.length}个番茄</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttomatoes.map((t: any) => <TomatoItem key={t.id} {...t} />)\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\r\n\t\t\t)\r\n\t\t})\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"TomatoList\" id=\"TomatoList\">\r\n\t\t\t\t{/* {format(new Date(\"2019-11-12T12:22:26.738Z\"), \"yyyy-MM-dd'T'HH:mm:ss.SSSxxx\")} */}\r\n\t\t\t\t{list}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default TomatoList;","import * as React from 'react';\r\nimport TomatoAction from './TomatoAction'\r\nimport TomatoList from './TomatoList'\r\nimport { connect } from 'react-redux';\r\nimport './Tomatoes.scss'\r\nimport { addTomato, updateTomato } from '../../Redux/actions/tomatoes'\r\nimport axios from \"../../config/axios\";\r\nimport _ from 'lodash'\r\nimport { format } from 'date-fns'\r\n\r\ninterface ITomatoesProps {\r\n\taddTomato: (payload: any) => any;\r\n\tupdateTomato: (payload: any) => any;\r\n\ttomatoes: any[];\r\n}\r\n\r\nclass Tomatoes extends React.Component<ITomatoesProps> {\r\n\tconstructor(props: any) {\r\n\t\tsuper(props)\r\n\t}\r\n\r\n\tget unfinishedTomato() {\r\n\t\treturn this.props.tomatoes.filter(t => !t.description && !t.ended_at && !t.aborted)[0]\r\n\t}\r\n\r\n\t// format(`2019-11-12T12:22:26.738Z`,'YYYY-MM-D')\r\n\t// data-fns时间转换bug,版本更新,不接受字符串格式参数,接受Date或number类型\r\n\tget finishedTomatoes() {\r\n\t\tconst finishedTomatoes = this.props.tomatoes.filter(t => t.description && t.ended_at && !t.aborted)\r\n\t\treturn _.groupBy(finishedTomatoes, (tometo) => {\r\n\t\t\treturn format(new Date(tometo.started_at), 'yyyy-MM-dd')\r\n\t\t})\r\n\t}\r\n\t//数据初始化在HOME进行\r\n\t// getTomatoes = async () => {\r\n\t// \ttry {\r\n\t// \t\tconst response = await axios.get('tomatoes')\r\n\t// \t\tconsole.log(response.data.resources);\r\n\t// \t\tthis.props.initTomatoes(response.data.resources)\r\n\r\n\t// \t} catch (e) {\r\n\t// \t\t// throw new Error(e)\r\n\t// \t}\r\n\t// }\r\n\r\n\tstartTomato = async () => {\r\n\t\ttry {\r\n\t\t\tconst response = await axios.post('tomatoes', { duration: 1500000 })\r\n\t\t\tthis.props.addTomato(response.data.resource)\r\n\t\t} catch (e) {\r\n\t\t\tthrow new Error(e)\r\n\t\t}\r\n\t}\r\n\r\n\tpublic render() {\r\n\t\treturn (\r\n\t\t\t<div className=\"Tomatoes\" id=\"Tomatoes\">\r\n\t\t\t\t<TomatoAction startTomato={this.startTomato} unfinishedTomato={this.unfinishedTomato} updateTomato={this.props.updateTomato} />\r\n\t\t\t\t<TomatoList finishedTomatoes={this.finishedTomatoes} />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state: any, ownProps: any) => ({\r\n\ttomatoes: state.tomatoes,\r\n\t...ownProps\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n\taddTomato,\r\n\tupdateTomato\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Tomatoes);","import { INIT_TOMATOES, ADD_TOMATO, UPDATE_TOMATO } from '../actionTypes'\r\n\r\nexport const addTomato = (payload: any) => {\r\n\treturn {\r\n\t\ttype: ADD_TOMATO,\r\n\t\tpayload\r\n\t}\r\n}\r\n\r\nexport const updateTomato = (payload: any) => {\r\n\treturn {\r\n\t\ttype: UPDATE_TOMATO,\r\n\t\tpayload\r\n\t}\r\n}\r\n\r\nexport const initTomatoes = (payload: any[]) => {\r\n\treturn {\r\n\t\ttype: INIT_TOMATOES,\r\n\t\tpayload\r\n\t}\r\n}","import * as React from \"react\"\r\n\r\ninterface IpologonProps {\r\n    data: any;\r\n    totalFinishedCount: number\r\n}\r\n\r\n\r\nclass Polygon extends React.Component<IpologonProps>{\r\n    constructor(props: any) {\r\n        super(props)\r\n    }\r\n\r\n    point = () => {\r\n        const dates = Object.keys(this.props.data).sort((a, b) => {\r\n            return Date.parse(a) - Date.parse(b)\r\n        })\r\n        const firstDay = dates[0]\r\n        if (firstDay) {\r\n            const range = new Date().getTime() - Date.parse(firstDay)\r\n            let finishedCount = 0\r\n            let finishedY\r\n            const pointArr = dates.map(date => {\r\n                const x = (Date.parse(date) - Date.parse(firstDay)) / range * 240\r\n                finishedCount += this.props.data[date].length\r\n                const y = (1 - (finishedCount / this.props.totalFinishedCount)) * 60\r\n                finishedY = y\r\n                return `${x},${y}`\r\n            })\r\n            return ['0,60', ...pointArr, `240,${finishedY}`, '240,60'].join(' ')\r\n        } else {\r\n            return \"0,60 240,60\"\r\n        }\r\n        // return \"0,60 20,59.5 30,49.5 228,0 240,0 240,60\"\r\n    }\r\n\r\n    public render() {\r\n        return (\r\n            <div className=\"Polygon\" id=\"Polygon\">\r\n                <svg viewBox=\"0 0 240 60\" preserveAspectRatio=\"xMaxYMax meet\"  >\r\n                    <polygon fill=\"rgba(215,78,78,0.1)\" stroke=\"rgba(215,78,78,0.5)\" stroke-width=\"1\"\r\n                        points={this.point()} />\r\n                </svg>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Polygon","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { format } from \"date-fns\";\nimport { updateTodo } from \"../../../Redux/actions/todos\";\nimport axios from '../../../config/axios'\nimport './TodoHistoryTodoItem.scss'\n\ninterface ITodoHistoryTodoItemProps {\n\ttodo: any;\n\titemType: string;\n\tupdateTodo: (payload: any) => void;\n}\n\nclass TodoHistoryTodoItem extends React.Component<ITodoHistoryTodoItemProps> {\n\tconstructor(props) {\n\t\tsuper(props)\n\t}\n\n\tupdateTodo = async (params: any) => {\n\t\ttry {\n\t\t\tconst response = await axios.put(`todos/${this.props.todo.id}`, params)\n\t\t\tthis.props.updateTodo(response.data.resource)\n\t\t} catch (e) {\n\t\t\tthrow new Error(e)\n\t\t}\n\t}\n\n\tpublic render() {\n\t\tlet action\n\t\tlet formatText\n\t\tlet time\n\t\tif (this.props.itemType === 'finished') {\n\t\t\tformatText = 'HH:mm'\n\t\t\ttime = this.props.todo.updated_at\n\t\t\taction = (\n\t\t\t\t<div className=\"action\">\n\t\t\t\t\t<span onClick={() => this.updateTodo({ finished: false })}>恢复</span>\n\t\t\t\t\t<span onClick={() => this.updateTodo({ deleted: true })}>删除</span>\n\t\t\t\t</div>\n\t\t\t)\n\t\t} else if (this.props.itemType === 'deleted') {\n\t\t\tformatText = 'yyyy-MM-dd'\n\t\t\ttime = this.props.todo.created_at\n\t\t\taction = (\n\t\t\t\t<div className=\"action\">\n\t\t\t\t\t<span onClick={() => this.updateTodo({ deleted: false })}>恢复</span>\n\t\t\t\t</div>\n\t\t\t)\n\t\t}\n\t\treturn (\n\t\t\t<div className=\"TodoHistoryTodoItem\" id=\"TodoHistoryTodoItem\">\n\t\t\t\t<div className=\"text\">\n\t\t\t\t\t<span className=\"time\">{format(new Date(time), formatText)}</span>\n\t\t\t\t\t<span className=\"description\">{this.props.todo.description}</span>\n\t\t\t\t</div>\n\t\t\t\t{action}\n\t\t\t</div>\n\t\t);\n\t}\n}\nconst mapStateToProps = (state, ownProps) => ({\n\t...ownProps\n})\n\nconst mapDispatchToProps = {\n\tupdateTodo\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoHistoryTodoItem);","import * as React from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { format } from \"date-fns\";\r\nimport { Tabs } from 'antd';\r\nimport TodoHistoryTodoItem from './TodoHistoryTodoItem'\r\nimport _ from 'lodash'\r\nimport './TodoHistory.scss'\r\n\r\nconst TabPane = Tabs.TabPane;\r\n\r\ninterface ITodoHistoryProps {\r\n    todos: any[];\r\n}\r\n\r\nclass TodoHistory extends React.Component<ITodoHistoryProps> {\r\n    get finishedTodos() {\r\n        return this.props.todos.filter(t => t.completed && !t.deleted)\r\n    }\r\n\r\n    get deletedTodos() {\r\n        return this.props.todos.filter(t => t.deleted)\r\n    }\r\n\r\n    get dailyFinishedTodos() {\r\n        return _.groupBy(this.finishedTodos, (todo) => {\r\n            return format(new Date(todo.updated_at), 'yyyy-MM-d')\r\n        })\r\n    }\r\n\r\n    get finishedDates() {\r\n        return Object.keys(this.dailyFinishedTodos).sort((a, b) => Date.parse(b) - Date.parse(a))\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    public render() {\r\n        const finishedTodoList = this.finishedDates.map(date => {\r\n            return (\r\n                <div key={date} className=\"dailyTodos\">\r\n                    <div className=\"summary\">\r\n                        <p className=\"date\">\r\n                            <span>{date}</span>\r\n                            <span>周五</span>\r\n                        </p>\r\n                        <p className=\"finishedCount\">完成了{this.dailyFinishedTodos[date].length}个任务</p>\r\n                    </div>\r\n                    <div className=\"todoList\">\r\n                        {\r\n                            this.dailyFinishedTodos[date].map(todo =>\r\n                                <TodoHistoryTodoItem key={todo.id} todo={todo} itemType=\"finished\" />)\r\n                        }\r\n                    </div>\r\n                </div>\r\n            )\r\n        })\r\n        const deletedTodoList = this.deletedTodos.map(todo => {\r\n            return (\r\n                <TodoHistoryTodoItem key={todo.id} todo={todo} itemType=\"deleted\" />\r\n            )\r\n        })\r\n        return (\r\n            <Tabs defaultActiveKey=\"1\">\r\n                <TabPane tab=\"已完成任务\" key=\"1\">\r\n                    <div className=\"TodoHistory\" id=\"TodoHistory\">\r\n                        {finishedTodoList}\r\n                    </div>\r\n                </TabPane>\r\n                <TabPane tab=\"已删除的任务\" key=\"2\">\r\n                    <div className=\"TodoHistory\" id=\"TodoHistory\">\r\n                        {deletedTodoList}\r\n                    </div>\r\n                </TabPane>\r\n            </Tabs>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    todos: state.todos,\r\n    ...ownProps\r\n})\r\n\r\nexport default connect(mapStateToProps)(TodoHistory);","import * as React from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport Polygon from \"./Polygon\"\r\nimport TodoHistory from './TodoHistory/TodoHistory'\r\nimport { format } from 'date-fns'\r\nimport _ from \"lodash\"\r\nimport \"./Statistics.scss\"\r\n\r\ninterface IstattisticsProps {\r\n    todos: any[]\r\n}\r\n\r\n\r\nclass Statistics extends React.Component<IstattisticsProps, any>{\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    get finishedTodos() {\r\n        return this.props.todos.filter(t => t.completed && !t.delete)\r\n    }\r\n    get dailyTodos() {\r\n        return _.groupBy(this.finishedTodos, (todo) => {\r\n            return format(new Date(todo.updated_at), 'yyyy-MM-d')\r\n        })\r\n    }\r\n    public render() {\r\n        return (\r\n            <div className=\"Statistics\" id=\"Statistics\">\r\n                <ul>\r\n                    <li>\r\n                        <div className=\"description\">\r\n                            <span className=\"title\">统计</span>\r\n                            <span className=\"subtitle\">累计完成任务</span>\r\n                            <span className=\"quantity\">{this.finishedTodos.length}</span>\r\n                        </div>\r\n                    </li>\r\n                    <li>\r\n                        <div className=\"description\">\r\n                            <span className=\"title\">番茄历史</span>\r\n                            <span className=\"subtitle\">累计完成番茄</span>\r\n                            <span className=\"quantity\">{this.finishedTodos.length}</span>\r\n                        </div>\r\n                    </li>\r\n                    <li>\r\n                        <div className=\"description\">\r\n                            <span className=\"title\">任务历史</span>\r\n                            <span className=\"subtitle\">累计完成任务</span>\r\n                            <span className=\"quantity\">{this.finishedTodos.length}</span>\r\n                        </div>\r\n                        <Polygon data={this.dailyTodos} totalFinishedCount={this.finishedTodos.length} />\r\n                    </li>\r\n                </ul>\r\n                <TodoHistory />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {//绑定store的state到props中\r\n    return {\r\n        todos: state.todos,\r\n        ...ownProps\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Statistics);","import * as React from \"react\"\r\nimport { Menu, Icon, Dropdown } from 'antd';\r\nimport 'antd/dist/antd.css'; // or 'antd/dist/antd.less'\r\nimport axios from \"../../config/axios\";\r\nimport Todos from \"../Todos/Todos\"\r\nimport Tomatoes from \"../Tomatoes/Tomatoes\"\r\nimport Statistics from \"../Statistics/Statistics\"\r\nimport { connect } from \"react-redux\"\r\nimport { initTodos } from \"../../Redux/actions/todos\";\r\nimport { initTomatoes } from \"../../Redux/actions/tomatoes\";\r\nimport './Home.scss'\r\n\r\nclass SignUp extends React.Component<any, any>{\r\n    constructor(props: any) {\r\n        super(props)\r\n        this.state = {\r\n            user: {}\r\n        }\r\n    }\r\n    async componentWillMount() {\r\n        await this.getMe()\r\n        await this.getTodos()\r\n        await this.getTomatoes()\r\n    }\r\n\r\n    getTodos = async () => {\r\n        try {\r\n            const response = await axios.get('todos')\r\n            const todos = response.data.resources.map((t: any) => Object.assign({}, t, { editing: false }))\r\n            this.props.initTodos(todos)//\r\n        } catch (e) {\r\n            // throw new Error(e)\r\n        }\r\n    }\r\n    getTomatoes = async () => {\r\n        try {\r\n            const response = await axios.get('tomatoes')\r\n            console.log(response.data.resources);\r\n            this.props.initTomatoes(response.data.resources)\r\n\r\n        } catch (e) {\r\n            // throw new Error(e)\r\n        }\r\n    }\r\n    getMe = async () => {\r\n        try {\r\n            const response = await axios.get(\"me\")\r\n            this.setState({ user: response.data })\r\n\r\n        } catch (e) {\r\n            // if (e.response.status === 401) {\r\n            //     this.props.history.push(\"/LogIn\")//跳转登录页\r\n            // }\r\n            //重定向放在拦截器进行\r\n            console.error(\"获取用户失败\");\r\n        }\r\n    }\r\n    logout = () => {\r\n        localStorage.setItem('x-token', '')//注销JWT\r\n        this.props.history.push(\"/LogIn\")//跳转登录页\r\n    }\r\n    public render() {\r\n        const menu = (\r\n            <Menu style={{ padding: \"0 10px\" }}>\r\n                <Menu.Item key=\"1\"><Icon type=\"setting\" />  设置  </Menu.Item>\r\n                <Menu.Item key=\"2\" onClick={this.logout}><Icon type=\"logout\" />  注销  </Menu.Item>\r\n            </Menu>\r\n        );\r\n        return (\r\n            <div className=\"Home\" id=\"Home\">\r\n\r\n                <header>\r\n                    <h2 className=\"logo\">LOGO</h2>\r\n                    <Dropdown.Button overlay={menu} icon={<Icon type=\"down\" />}>\r\n                        <span>\r\n                            <Icon type=\"user\" style={{ padding: 5 }} />\r\n\r\n                            {this.state.user && this.state.user.account}\r\n                        </span>\r\n                    </Dropdown.Button>\r\n                </header>\r\n                \r\n                <main>\r\n                    <Tomatoes />\r\n                    <Todos />\r\n                </main>\r\n                <Statistics />\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        todos: state.todos,\r\n        ...ownProps\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    initTodos, initTomatoes\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {combineReducers} from \"redux\";\r\nimport todos from './todos'\r\nimport tomatoes from './tomatoes'\r\n\r\nexport default combineReducers({todos,tomatoes})","import {ADD_TODO,INIT_TODOS,UPDATE_TODO,EDIT_TODO} from '../actionTypes'\r\n\r\nexport default (state:any[] = [], action:any) => {\r\n\tswitch (action.type){\r\n\t\tcase ADD_TODO:\r\n\t\t\treturn [...state,action.payload];\r\n\t\tcase INIT_TODOS:\r\n\t\t\treturn [...action.payload];\r\n\t\tcase UPDATE_TODO:\r\n\t\t\treturn state.map(t=>{\r\n\t\t\t\tif(t.id === action.payload.id){\r\n\t\t\t\t\treturn action.payload\r\n\t\t\t\t}else{\r\n\t\t\t\t\treturn t\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\tcase EDIT_TODO:\r\n\t\t\treturn state.map(t=>{\r\n\t\t\tif(t.id === action.payload){\r\n\t\t\t\treturn Object.assign({},t,{editing: true})\r\n\t\t\t}else{\r\n\t\t\t\treturn Object.assign({},t,{editing: false})\r\n\t\t\t}\r\n\t\t})\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n","import {ADD_TOMATO,UPDATE_TOMATO, INIT_TOMATOES} from \"../actionTypes\";\r\n\r\nexport default (state:any[] = [], action) => {\r\n\tswitch(action.type){\r\n\t\tcase ADD_TOMATO:\r\n\t\t\treturn [action.payload,...state];\r\n\t\tcase UPDATE_TOMATO:\r\n\t\t\treturn state.map(t=>{\r\n\t\t\t\tif(t.id === action.payload.id){\r\n\t\t\t\t\treturn action.payload\r\n\t\t\t\t}else{\r\n\t\t\t\t\treturn t\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\tcase INIT_TOMATOES:\r\n\t\t\treturn [...action.payload]\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}","import { createStore } from 'redux'\r\nimport rootReducer from './reducers'\r\nconst store = createStore(rootReducer)\r\n\r\nexport default store","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Provider } from 'react-redux';\r\nimport store from './Redux/Store'\r\n\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>\r\n    , document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import React from \"react\";\r\nimport {\r\n  Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\nimport SignUp from './component/SignUp/SignUp'\r\nimport LogIn from './component/LogIn/LogIn'\r\nimport Home from './component/Home/Home'\r\nimport history from './config/history'\r\n\r\n\r\nexport default function App() {\r\n  return (\r\n    <Router history={history}>\r\n      <div>\r\n        <nav>\r\n          <ul>\r\n            <li>\r\n              <Link to=\"/\">Home</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/SignUp\">SignUp</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/LogIn\">LogIn</Link>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n        <Switch>\r\n          <Route path=\"/LogIn\" component={LogIn}>\r\n          </Route>\r\n          <Route path=\"/SignUp\" component={SignUp}>\r\n          </Route>\r\n          <Route path=\"/\" component={Home}>\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\n\r\n\r\n"],"sourceRoot":""}