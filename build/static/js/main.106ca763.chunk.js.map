{"version":3,"sources":["config/history.ts","config/axios.ts","component/SignUp/SignUp.tsx","component/LogIn/LogIn.tsx","Redux/actions/todos.ts","Redux/actionTypes.ts","component/Todos/TodoInput.tsx","component/Todos/TodoItem.tsx","component/Tomatoes/CountDown.tsx","component/Todos/Todos.tsx","component/Tomatoes/TomatoAction.tsx","component/Tomatoes/Tomatoes.tsx","Redux/actions/tomatoes.ts","component/Home/Home.tsx","serviceWorker.ts","Redux/reducers/index.ts","Redux/reducers/todos.ts","Redux/reducers/tomatoes.ts","Redux/Store.ts","index.tsx","App.tsx"],"names":["publicUrl","history","createBrowserHistory","basename","instance","axios","create","baseURL","headers","interceptors","request","use","config","xToken","localStorage","getItem","error","console","Promise","reject","response","setItem","status","log","push","SignUp","props","onChange","key","value","temp","setState","submit","a","state","account","password","passwordConformation","post","alert","this","className","id","allowClear","placeholder","prefix","type","style","color","e","target","Password","onClick","to","React","LogIn","updateTodo","payload","TodoInput","onKeyUp","keyCode","addTodo","description","data","resource","Error","suffix","mapDispatchToProps","connect","ownProps","TodoItem","params","put","editTodo","onkeyUp","editText","onEnter","Editing","theme","deleted","Text","onDoubleClick","classnames","editing","completed","padding","checked","timerId","Panel","Collapse","Todos","getTodos","get","todos","resources","map","t","Object","assign","initTodos","unCompletedTodos","bordered","header","completedTodos","filter","unDeleteTodos","CountDown","countDown","timer","setInterval","time","document","title","onFinish","clearInterval","percent","duration","width","min","Math","floor","second","confirm","Modal","TomatoAction","updateTomato","ended_at","Date","forceUpdate","showConfirm","onOk","abortTomato","onCancel","cancelText","okText","aborted","unfinishedTomato","html","undefined","startTomato","startedAt","parse","started_at","timeNow","getTime","Tomatoes","getTomatoes","initTomatoes","addTomato","tomatoes","getMe","user","logout","window","addEventListener","event","location","href","menu","Item","Button","overlay","icon","Boolean","hostname","match","combineReducers","action","store","createStore","rootReducer","ReactDOM","render","path","component","Home","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.106ca763.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history'\r\n\r\n\r\nconst ENV = process.env.NODE_ENV;\r\nlet publicUrl: string = '';\r\n\r\nif (ENV === 'development') {\r\n    publicUrl = '/';\r\n} else if (ENV === 'production') {\r\n    publicUrl = '/react-todolist/build';\r\n}\r\n\r\n\r\nconst history = createBrowserHistory({\r\n    basename: publicUrl\r\n});\r\n\r\nexport default history;\r\n\r\n\r\n","import axios from 'axios';\r\nimport  history from './history'\r\n\r\nconst appID = \"D6wiWSq4HHEr4r6byqNR4ZbW\"\r\nconst appSecret = \"7AzZnpadyu4Xbgq73tLmoGz9\"\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://gp-server.hunger-valley.com/',\r\n    headers: {\r\n        't-app-id': appID,\r\n        't-app-secret': appSecret\r\n    }\r\n});\r\n\r\n// Add a request interceptor\r\ninstance.interceptors.request.use(function (config) {\r\n    const xToken = localStorage.getItem('x-token')\r\n    if (xToken) {\r\n        config.headers['Authorization'] = `Bearer ${xToken}`\r\n    }\r\n    return config;\r\n}, function (error) {\r\n    console.error(error)\r\n    return Promise.reject(error);\r\n});\r\n\r\n// Add a response interceptor\r\ninstance.interceptors.response.use(function (response) {\r\n    // Do something with response data\r\n    if (response.headers['x-token']) {\r\n        localStorage.setItem('x-token', response.headers['x-token'])\r\n    }\r\n    return response;\r\n}, function (error) {\r\n    // Do something with response error\r\n    if (error.response.status === 401) {\r\n        console.log('重定向');\r\n        history.push(\"/LogIn\")//跳转登录页\r\n    }\r\n    return Promise.reject(error);\r\n});\r\n\r\nexport default instance","import * as React from \"react\"\r\nimport { Input, Icon, Button } from 'antd';\r\nimport 'antd/dist/antd.css'; // or 'antd/dist/antd.less'\r\nimport axios from \"../../config/axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./SignUp.scss\"\r\n\r\ninterface TSignUpState {\r\n    account?: string,\r\n    password?: string,\r\n    passwordConformation?: string\r\n}\r\n\r\n\r\nclass SignUp extends React.Component<any, TSignUpState> {\r\n    constructor(props: any) {\r\n        super(props)\r\n        this.state = {\r\n            account: '',\r\n            password: '',\r\n            passwordConformation: ''\r\n        }\r\n    }\r\n    onChange = (key: keyof TSignUpState, value: string) => {\r\n        const temp: TSignUpState = {}\r\n        temp[key] = value\r\n        this.setState(temp)\r\n\r\n    }\r\n    submit = async () => {\r\n        const { account, password, passwordConformation } = this.state\r\n        try {\r\n            await axios.post(\"sign_up/user\", {\r\n                account,\r\n                password,\r\n            })\r\n            this.props.history.push(\"/\")//登录成功跳转主页面\r\n\r\n        } catch (error) {\r\n            alert('错误')\r\n            this.setState({password: '',passwordConformation: ''})\r\n            // throw new Error(error)\r\n        }\r\n    }\r\n    public render() {\r\n        const { account, password, passwordConformation } = this.state;\r\n        return (\r\n            <div className=\"signUp\" id=\"SignUp\">\r\n                <h1>React todo-lis注册</h1>\r\n                <Input\r\n                    id=\"account\"\r\n                    allowClear\r\n                    placeholder=\"输入用户名 \"\r\n                    prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                    value={account}\r\n                    onChange={(e) => { this.onChange(\"account\", e.target.value) }}\r\n                />\r\n                <Input.Password id=\"password\" value={password} placeholder=\"输入密码\" onChange={(e) => { this.onChange(\"password\", e.target.value) }} />\r\n                <Input.Password id=\"passwordConformation\" value={passwordConformation} placeholder=\"确认密码\" onChange={(e) => { this.onChange(\"passwordConformation\", e.target.value) }} />\r\n                <Button className=\"SignUpButton\" type=\"primary\" onClick={this.submit}>注册</Button>\r\n                <p>如果你有账号,请  <Link to=\"/LogIn\">登录</Link></p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SignUp;","import * as React from \"react\"\r\nimport { Input, Icon, Button } from 'antd';\r\nimport 'antd/dist/antd.css'; // or 'antd/dist/antd.less'\r\nimport axios from \"../../config/axios\";\r\nimport { Link  } from \"react-router-dom\";\r\nimport \"./Login.scss\"\r\n\r\ninterface TSLogInState {\r\n    account?: string,\r\n    password?: string,\r\n}\r\n\r\n\r\nclass LogIn extends React.Component<any, TSLogInState> {\r\n    constructor(props: any) {\r\n        super(props)\r\n        this.state = {\r\n            account: '',\r\n            password: '',\r\n        }\r\n    }\r\n    onChange = (key: keyof TSLogInState, value: string) => {\r\n        const temp: TSLogInState = {}\r\n        temp[key] = value\r\n        this.setState(temp)\r\n        \r\n    }\r\n    submit = async () => {\r\n        const { account, password, } = this.state\r\n        try {\r\n            await axios.post(\"sign_in/user\", {\r\n                account,\r\n                password\r\n            })\r\n            this.props.history.push(\"/\")//登录成功跳转主页面\r\n            console.log(this.props);\r\n            \r\n        } catch (error) {\r\n            console.log(this.props);\r\n            // throw new Error(error)\r\n            alert(\"密码或用户名错误\")\r\n            this.setState({password: ''})\r\n        }\r\n    }\r\n    public render() {\r\n        const { account, password } = this.state;\r\n        return (\r\n            <div className=\"LogIn\" id=\"LogIn\">\r\n                <h1>React todo-list登录</h1>\r\n                <Input\r\n                    allowClear\r\n                    placeholder=\"输入用户名 \"\r\n                    prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                    value={account}\r\n                    onChange={(e) => { this.onChange(\"account\", e.target.value) }}\r\n                />\r\n                <Input.Password value={password} onChange={(e) => { this.onChange(\"password\", e.target.value) }} placeholder=\"输入密码\" />\r\n                <Button className=\"LogInButton\" type=\"primary\" onClick={this.submit}>登录</Button>\r\n                <p>如果你没有账号,请  <Link to=\"/SignUp\">注册</Link></p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LogIn;","import { ADD_TODO, INIT_TODOS, UPDATE_TODO, EDIT_TODO } from \"../actionTypes\";\r\n\r\nexport const addTodo = (payload: any) => {\r\n    return {\r\n        type: ADD_TODO,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const initTodos = (payload: any[]) => {\r\n    return {\r\n        type: INIT_TODOS,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const updateTodo = (payload: any) => {\r\n    return {\r\n        type: UPDATE_TODO,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const editTodo = (payload: number) => {\r\n    return {\r\n        type: EDIT_TODO,\r\n        payload\r\n    }\r\n}","export const ADD_TODO = 'ADD_TODO'\r\nexport const INIT_TODOS = 'INIT_TODOS'\r\nexport const UPDATE_TODO = 'UPDATE_TODO'\r\nexport const EDIT_TODO = 'EDIT_TODO'\r\n\r\nexport const ADD_TOMATO = 'ADD_TOMATO'\r\nexport const UPDATE_TOMATO = 'UPDATE_TOMATO'\r\nexport const INIT_TOMATOES = 'INIT_TOMATOES'","import * as React from \"react\"\r\nimport { connect } from 'react-redux';\r\nimport { Input, Icon, Dropdown } from 'antd';\r\nimport 'antd/dist/antd.css'; // or 'antd/dist/antd.less'\r\nimport axios from \"../../config/axios\";\r\nimport { addTodo } from  \"../../Redux/actions/todos\";\r\n\r\n\r\nclass TodoInput extends React.Component<any, any>{\r\n    constructor(props: any) {\r\n        super(props)\r\n        this.state = {\r\n            description: ''\r\n        }\r\n    }\r\n    onKeyUp = (e: any) => {\r\n        if (e.keyCode === 13) {\r\n            this.addTodo()\r\n        }\r\n    }\r\n    addTodo = async () => {\r\n        try {\r\n            if (this.state.description !== '') {\r\n                // this.props.addTodo({ description: this.state.description })//调用父组件传递的事件handler\r\n                const response = await axios.post('todos', { description: this.state.description })\r\n                this.props.addTodo(response.data.resource)//更新store\r\n            }\r\n        } catch (e) {\r\n            throw new Error(e)\r\n        }\r\n        this.setState({ description: '' })//input置空\r\n\r\n    }\r\n\r\n    public render() {\r\n        const { description } = this.state;\r\n        //判断input内容存在与否,保存JSX变量\r\n        const suffix = description ? <Icon type=\"enter\" onClick={this.addTodo} /> : <span />;\r\n        return (\r\n            <div className=\"TodoInput\" id=\"TodoInput\">\r\n                <Input\r\n                    placeholder=\"添加新任务\"\r\n                    suffix={suffix}\r\n                    value={description}\r\n                    onChange={(e) => this.setState({ description: e.target.value })}\r\n                    onKeyUp={this.onKeyUp}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: any, ownProps: any) => ({\r\n    ...ownProps\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    addTodo\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoInput);","import * as React from \"react\"\r\nimport { Icon, Checkbox } from 'antd';\r\nimport 'antd/dist/antd.css'; // or 'antd/dist/antd.less'\r\nimport axios from \"../../config/axios\";\r\nimport classnames from 'classnames'\r\nimport './TodoItem.scss'\r\nimport { connect } from 'react-redux';\r\nimport { editTodo, updateTodo } from \"../../Redux/actions/todos\";\r\n\r\nclass TodoItem extends React.Component<any, any>{\r\n    constructor(props: any) {\r\n        super(props)\r\n        this.state = {\r\n            editText: this.props.description,//input初始值\r\n        }\r\n    }\r\n\r\n    updateTodo = async (params: any) => {//\r\n        try {\r\n            const response = await axios.put(`todos/${this.props.id}`, params)//请求接口数据\r\n            this.props.updateTodo(response.data.resource)//更新store数据\r\n        } catch (e) {\r\n            throw new Error(e)\r\n        }\r\n    }\r\n    editTodo = () => {\r\n        this.props.editTodo(this.props.id)//item进入编辑模式,显示Input框\r\n    }\r\n\r\n    // update = (params: any) => {\r\n    //     this.props.update(this.props.id, params)\r\n\r\n    // }\r\n    // toEditing = () => {\r\n    //     this.props.toEditing(this.props.id)\r\n    // }\r\n\r\n\r\n    onkeyUp = (e: any) => {\r\n        if (e.keyCode === 13 && this.state.editText !== \"\") {\r\n            // this.update({ description: this.state.editText })//调用父组件传递的事件handler\r\n            this.updateTodo({ description: this.state.editText })//更新store数据\r\n        }\r\n    }\r\n    onEnter = () => {\r\n        if (this.state.editText !== \"\") {\r\n            // this.update({ description: this.state.editText })\r\n            this.updateTodo({ description: this.state.editText })//更新store数据\r\n        }\r\n    }\r\n\r\n\r\n    public render() {\r\n        const Editing = <span className=\"editing\">\r\n            <input type=\"text\" value={this.state.editText}\r\n                onChange={e => { this.setState({ editText: e.target.value }) }}\r\n                onKeyUp={this.onkeyUp}\r\n            />\r\n            <span>\r\n                <Icon type=\"enter\" onClick={this.onEnter} />\r\n                <Icon type=\"delete\" theme='filled'\r\n                    onClick={e => { this.updateTodo({ deleted: true }) }} />\r\n            </span>\r\n\r\n        </span>\r\n\r\n        const Text = <span className=\"text\" onDoubleClick={this.editTodo}>{this.props.description}</span>\r\n        return (\r\n            <div className={classnames({\r\n                TodoItem: true,\r\n                editing: this.props.editing,\r\n                completed: this.props.completed\r\n            })} id=\"TodoItem\" >\r\n                <Checkbox\r\n                    style={{ padding: '0 4px' }}\r\n                    checked={this.props.completed}\r\n                    onChange={e => this.updateTodo({ completed: e.target.checked })} />\r\n\r\n                {this.props.editing ? Editing : Text}\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: any, ownProps: any) => ({\r\n    ...ownProps\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    editTodo,\r\n    updateTodo\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoItem);","import * as React from 'react';\r\nimport './CountDown.scss'\r\n\r\ninterface ICountDownProps {\r\n\ttimer: number;\r\n\tduration: number;\r\n\tonFinish: () => void;\r\n}\r\n\r\ninterface ICountDownState {\r\n\tcountDown: number;\r\n}\r\n\r\nlet timerId:NodeJS.Timeout\r\n\r\nclass CountDown extends React.Component<ICountDownProps,ICountDownState> {\r\n\tconstructor(props:any){\r\n\t\tsuper(props)\r\n\t\tthis.state = {\r\n\t\t\tcountDown: this.props.timer\r\n\t\t}\r\n\t}\r\n\r\n\tget countDown(){\r\n\t\tconst min = Math.floor(this.state.countDown/1000/60)\r\n\t\tconst second = Math.floor(this.state.countDown/1000%60)\r\n\t\treturn `${min<10?`0${min}`:min}:${second<10?`0${second}`:second}`\r\n\t}\r\n\r\n\tcomponentDidMount(){\r\n\t\ttimerId = setInterval(()=>{\r\n\t\t\tconst time = this.state.countDown\r\n\t\t\tthis.setState({countDown: time - 1000})\r\n\t\t\tdocument.title = `${this.countDown} - React todolist`;\r\n\t\t\tif(time < 1000){\r\n\t\t\t\tdocument.title = 'React todolist';\r\n\t\t\t\tthis.props.onFinish()\r\n\t\t\t\tclearInterval(timerId)\r\n\t\t\t}\r\n\t\t},1000)\r\n\t}\r\n\r\n\tcomponentWillUnmount(){\r\n\t\tclearInterval(timerId)\r\n\t}\r\n\r\n\tpublic render() {\r\n\t\tconst percent = 1 - this.state.countDown/this.props.duration\r\n\t\treturn (\r\n\t\t\t<div className=\"CountDown\" id=\"CountDown\">\r\n\t\t\t\t<span className=\"restTime\">{this.countDown}</span>\r\n\t\t\t\t<div className=\"progress\" style={{width: `${percent*100}%`}}/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default CountDown;","import * as React from \"react\"\r\nimport { Collapse } from 'antd';\r\nimport 'antd/dist/antd.css'; // or 'antd/dist/antd.less'\r\nimport { initTodos, updateTodo } from \"../../Redux/actions/todos\";\r\nimport axios from \"../../config/axios\";\r\nimport TodoInput from \"./TodoInput\"\r\nimport TodoItem from './TodoItem'\r\nimport './Todos.scss'\r\nimport { connect } from 'react-redux';\r\n\r\nconst { Panel } = Collapse;\r\n\r\n\r\nclass Todos extends React.Component<any, any>{\r\n    constructor(props: any) {\r\n        super(props)\r\n        //旧数据保存在Todos.state中\r\n        // this.state = {\r\n        //     todos: []\r\n        // }\r\n    }\r\n    \r\n    get unDeleteTodos() {\r\n        return this.props.todos.filter((t: any) => { return !t.deleted })\r\n    }\r\n    get unCompletedTodos() {\r\n        return this.unDeleteTodos.filter((t: any) => { return !t.completed })\r\n    }\r\n    get completedTodos() {\r\n        return this.unDeleteTodos.filter((t: any) => { return t.completed })\r\n    }\r\n    componentDidMount() {//生命周期函数,初始化数据\r\n        this.getTodos()\r\n    }\r\n    //新的数据获取函数,将数据保存在store中\r\n    getTodos = async () => {\r\n        try {\r\n            const response = await axios.get('todos')\r\n            const todos = response.data.resources.map((t: any) => Object.assign({}, t, { editing: false }))\r\n            this.props.initTodos(todos)//\r\n        } catch (e) {\r\n            throw new Error(e)\r\n        }\r\n    }\r\n    //旧的数据获取函数,将数据保存在todos的state中\r\n    // getTodo = async () => {\r\n    //     try {\r\n    //         let response = await axios.get('todos')\r\n    //         const todos = response.data.resources.map((t: any) => Object.assign({}, t, { editing: false }))\r\n    //         this.setState({ todos: todos })\r\n    //     } catch (e) {\r\n    //         throw new Error(e)\r\n    //     }\r\n    // }\r\n    //本地数据保存在父组件,通过props传递函数变动数据\r\n    // addTodo = async (params: any) => {\r\n    //     const { todos } = this.state\r\n    //     try {\r\n    //         const response = await axios.post(\"todos\", params)\r\n    //         this.setState({ todos: [response.data.resource, ...todos] })\r\n    //     } catch (e) {\r\n    //         throw new Error(e)\r\n    //     }\r\n    // }\r\n    // updaTodo = async (id: any, params: any) => {\r\n    //     const { todos } = this.state\r\n    //     try {\r\n    //         const response = await axios.put(`todos/${id}`, params)\r\n    //         let newTodos = todos.map((t: any) => {\r\n    //             if (id === t.id) {\r\n    //                 return response.data.resource\r\n    //             } else {\r\n    //                 return t\r\n    //             }\r\n    //         })\r\n    //         this.setState({ todos: newTodos })\r\n    //     } catch (e) {\r\n    //         // throw new Error(e)\r\n    //     }\r\n    // }\r\n    // toEditing = (id: number) => {\r\n    //     const { todos } = this.state\r\n    //     const newTodos = todos.map((t: any) => {\r\n    //         if (id === t.id) {\r\n    //             return Object.assign({}, t, { editing: true })\r\n    //         } else {\r\n    //             return Object.assign({}, t, { editing: false })\r\n    //         }\r\n    //     })\r\n    //     this.setState({ todos: newTodos })\r\n    // }\r\n\r\n\r\n    public render() {\r\n        return (\r\n            <div className=\"Todos\" id=\"Todos\">\r\n                <TodoInput ></TodoInput>\r\n                <main>\r\n                    {\r\n                        this.unCompletedTodos.map((t: any) => {\r\n                            return <TodoItem key={t.id}{...t}\r\n                            />\r\n                        })\r\n                    }\r\n                    <Collapse  bordered={false}  >\r\n                        <Panel header=\"已完成任务\" key=\"1\">\r\n                            <p>{\r\n                                this.completedTodos.map((t: any) => {\r\n                                    return <TodoItem key={t.id}{...t}\r\n                                    />\r\n                                })\r\n                            }</p>\r\n                        </Panel>\r\n                    </Collapse>\r\n\r\n                </main>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state: any, ownProps: any) => {//绑定store的state到props中\r\n    return {\r\n        todos: state.todos,\r\n        ...ownProps\r\n    }\r\n}\r\nconst mapDispatchToProps = {//绑定dispatch函数到props中\r\n    initTodos,\r\n    updateTodo\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Todos);","import * as React from 'react';\r\nimport { Button, Modal, Input, Icon } from \"antd\"\r\nimport axios from '../../config/axios'\r\nimport CountDown from './CountDown'\r\nimport './TomatoAction.scss'\r\n// import CountDown from './CountDownHook'\r\n\r\ninterface ITomatoActionProps {\r\n    startTomato: () => void;\r\n    updateTomato: (payload: any) => void;\r\n    unfinishedTomato: any;\r\n}\r\n\r\ninterface ITomatoActionState {\r\n    description: string;\r\n}\r\n\r\nconst confirm = Modal.confirm;\r\n\r\nclass TomatoAction extends React.Component<ITomatoActionProps, ITomatoActionState> {\r\n    constructor(props:any) {\r\n        super(props)\r\n        this.state = {\r\n            description: ''\r\n        }\r\n    }\r\n\r\n    onKeyUp = (e:any) => {\r\n        if (e.keyCode === 13 && this.state.description !== '') {\r\n            this.updateTomato({\r\n                description: this.state.description,\r\n                ended_at: new Date()\r\n            })\r\n            this.setState({ description: '' })\r\n        }\r\n    }\r\n\r\n    onFinish = () => {\r\n        this.forceUpdate()\r\n    }\r\n\r\n    showConfirm = () => {\r\n        confirm({\r\n            title: '您目前正在一个番茄工作时间中，要放弃这个番茄吗？',\r\n            onOk: () => {\r\n                this.abortTomato()\r\n            },\r\n            onCancel() {\r\n                console.log('取消');\r\n            },\r\n            cancelText: '取消',\r\n            okText: '确定',\r\n        });\r\n    }\r\n\r\n    abortTomato = () => {\r\n        this.updateTomato({ aborted: true })\r\n        document.title = 'React todolist';\r\n    }\r\n\r\n    updateTomato = async (params: any) => {\r\n        try {\r\n            const response = await axios.put(`tomatoes/${this.props.unfinishedTomato.id}`, params)\r\n            this.props.updateTomato(response.data.resource)\r\n        } catch (e) {\r\n            throw new Error(e)\r\n        }\r\n    }\r\n\r\n    public render() {\r\n        let html = <div />\r\n        if (this.props.unfinishedTomato === undefined) {\r\n            html = <Button className=\"startTomatoButton\" onClick={() => { this.props.startTomato() }}>开始番茄</Button>\r\n        } else {\r\n            const startedAt = Date.parse(this.props.unfinishedTomato.started_at)\r\n            const duration = this.props.unfinishedTomato.duration\r\n            const timeNow = new Date().getTime()\r\n            if (timeNow - startedAt > duration) {\r\n                html = <div className=\"inputWrapper\">\r\n                    <Input value={this.state.description}\r\n                        placeholder=\"请输入你刚刚完成的任务\"\r\n                        onChange={e => this.setState({ description: e.target.value })}\r\n                        onKeyUp={e => this.onKeyUp(e)}\r\n                    />\r\n                    <Icon type=\"close-circle\" className=\"abort\"\r\n                        onClick={this.showConfirm}\r\n                    />\r\n                </div>\r\n            } else if (timeNow - startedAt < duration) {\r\n                const timer = duration - timeNow + startedAt\r\n                html = (\r\n                    <div className=\"countDownWrapper\">\r\n                        <CountDown timer={timer} duration={duration}\r\n                            onFinish={this.onFinish} />\r\n                        <Icon type=\"close-circle\" className=\"abort\"\r\n                            onClick={this.showConfirm} />\r\n                    </div>\r\n                )\r\n            }\r\n        }\r\n        return (\r\n            <div className=\"TomatoAction\" id=\"TomatoAction\">\r\n                {html}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TomatoAction;","import * as React from 'react';\r\nimport TomatoAction from './TomatoAction'\r\nimport TomatoList from './TomatoList'\r\nimport { connect } from 'react-redux';\r\nimport './Tomatoes.scss'\r\nimport { addTomato, initTomatoes, updateTomato } from '../../Redux/actions/tomatoes'\r\nimport axios from \"../../config/axios\";\r\nimport _ from 'lodash'\r\nimport { format } from 'date-fns'\r\n\r\ninterface ITomatoesProps {\r\n\taddTomato: (payload: any) => any;\r\n\tupdateTomato: (payload: any) => any;\r\n\tinitTomatoes: (payload: any[]) => any;\r\n\ttomatoes: any[];\r\n}\r\n\r\nclass Tomatoes extends React.Component<ITomatoesProps> {\r\n\tconstructor(props: any) {\r\n\t\tsuper(props)\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.getTomatoes()\r\n\t}\r\n\r\n\tget unfinishedTomato() {\r\n\t\treturn this.props.tomatoes.filter(t => !t.description && !t.ended_at && !t.aborted)[0]\r\n\t}\r\n\r\n\t//时间转换bug\r\n\t// get finishedTomatoes() {\r\n\t// \tconst finishedTomatoes = this.props.tomatoes.filter(t => t.description && t.ended_at && !t.aborted)\r\n\t// \tconst obj = _.groupBy(finishedTomatoes, (tometo) => {\r\n\t// \t\tconsole.log(tometo);\r\n\t// \t\tlet formatvalue = format(tometo.created_at, 'YYYY-MM-D')\r\n\t// \t\tconsole.log(formatvalue);\r\n\t// \t\treturn formatvalue\r\n\t// \t})\r\n\t// \treturn obj\r\n\t// }\r\n\r\n\tgetTomatoes = async () => {\r\n\t\ttry {\r\n\t\t\tconst response = await axios.get('tomatoes')\r\n\t\t\tthis.props.initTomatoes(response.data.resources)\r\n\r\n\t\t} catch (e) {\r\n\t\t\tthrow new Error(e)\r\n\t\t}\r\n\t}\r\n\r\n\tstartTomato = async () => {\r\n\t\ttry {\r\n\t\t\tconst response = await axios.post('tomatoes', { duration: 1500000 })\r\n\t\t\tthis.props.addTomato(response.data.resource)\r\n\t\t} catch (e) {\r\n\t\t\tthrow new Error(e)\r\n\t\t}\r\n\t}\r\n\r\n\tpublic render() {\r\n\t\treturn (\r\n\t\t\t<div className=\"Tomatoes\" id=\"Tomatoes\">\r\n\t\t\t\t<TomatoAction startTomato={this.startTomato} unfinishedTomato={this.unfinishedTomato} updateTomato={this.props.updateTomato} />\r\n\t\t\t\t{/* <TomatoList finishedTomatoes={this.finishedTomatoes} /> */}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state: any, ownProps: any) => ({\r\n\ttomatoes: state.tomatoes,\r\n\t...ownProps\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n\taddTomato,\r\n\tupdateTomato,\r\n\tinitTomatoes\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Tomatoes);","import { INIT_TOMATOES, ADD_TOMATO, UPDATE_TOMATO } from '../actionTypes'\r\n\r\nexport const addTomato = (payload: any) => {\r\n\treturn {\r\n\t\ttype: ADD_TOMATO,\r\n\t\tpayload\r\n\t}\r\n}\r\n\r\nexport const updateTomato = (payload: any) => {\r\n\treturn {\r\n\t\ttype: UPDATE_TOMATO,\r\n\t\tpayload\r\n\t}\r\n}\r\n\r\nexport const initTomatoes = (payload: any[]) => {\r\n\treturn {\r\n\t\ttype: INIT_TOMATOES,\r\n\t\tpayload\r\n\t}\r\n}","import * as React from \"react\"\r\nimport { Menu, Icon, Dropdown } from 'antd';\r\nimport 'antd/dist/antd.css'; // or 'antd/dist/antd.less'\r\nimport axios from \"../../config/axios\";\r\nimport Todos from \"../Todos/Todos\"\r\nimport Tomatoes from \"../Tomatoes/Tomatoes\"\r\nimport './Home.scss'\r\n\r\nclass SignUp extends React.Component<any, any>{\r\n    constructor(props: any) {\r\n        super(props)\r\n        this.state = {\r\n            user: {}\r\n        }\r\n    }\r\n    async componentWillMount() {\r\n        window.addEventListener(\"beforeunload\", function (event) {\r\n            window.location.href=\"https://huangjm7.github.io/react-todolist/build\"\r\n        });\r\n        await this.getMe()\r\n    }\r\n    getMe = async () => {\r\n        try {\r\n            const response = await axios.get(\"me\")\r\n            this.setState({ user: response.data })\r\n\r\n        } catch (e) {\r\n            // if (e.response.status === 401) {\r\n            //     this.props.history.push(\"/LogIn\")//跳转登录页\r\n            // }\r\n            //通过拦截器重定向\r\n            console.error(\"获取用户失败\");\r\n\r\n        }\r\n    }\r\n    logout = () => {\r\n        localStorage.setItem('x-token', '')//注销\r\n        this.props.history.push(\"/LogIn\")//跳转登录页\r\n    }\r\n    public render() {\r\n        const menu = (\r\n            <Menu style={{ padding: \"0 10px\" }}>\r\n                <Menu.Item key=\"1\"><Icon type=\"setting\" />  设置  </Menu.Item>\r\n                <Menu.Item key=\"2\" onClick={this.logout}><Icon type=\"logout\" />  注销  </Menu.Item>\r\n            </Menu>\r\n        );\r\n        return (\r\n            <div className=\"Home\" id=\"Home\">\r\n\r\n                <header>\r\n                    <h2 className=\"logo\">LOGO</h2>\r\n                    <Dropdown.Button overlay={menu} icon={<Icon type=\"down\" />}>\r\n                        <span>\r\n                            <Icon type=\"user\" style={{ padding: 5 }} />\r\n\r\n                            {this.state.user && this.state.user.account}\r\n                        </span>\r\n                    </Dropdown.Button>\r\n                </header>\r\n\r\n                <main>\r\n                    <Tomatoes />\r\n                    <Todos />\r\n                </main>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SignUp;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {combineReducers} from \"redux\";\r\nimport todos from './todos'\r\nimport tomatoes from './tomatoes'\r\n\r\nexport default combineReducers({todos,tomatoes})","import {ADD_TODO,INIT_TODOS,UPDATE_TODO,EDIT_TODO} from '../actionTypes'\r\n\r\nexport default (state:any[] = [], action:any) => {\r\n\tswitch (action.type){\r\n\t\tcase ADD_TODO:\r\n\t\t\treturn [state,...action.payload];\r\n\t\tcase INIT_TODOS:\r\n\t\t\treturn [...action.payload];\r\n\t\tcase UPDATE_TODO:\r\n\t\t\treturn state.map(t=>{\r\n\t\t\t\tif(t.id === action.payload.id){\r\n\t\t\t\t\treturn action.payload\r\n\t\t\t\t}else{\r\n\t\t\t\t\treturn t\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\tcase EDIT_TODO:\r\n\t\t\treturn state.map(t=>{\r\n\t\t\tif(t.id === action.payload){\r\n\t\t\t\treturn Object.assign({},t,{editing: true})\r\n\t\t\t}else{\r\n\t\t\t\treturn Object.assign({},t,{editing: false})\r\n\t\t\t}\r\n\t\t})\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n","import {ADD_TOMATO,UPDATE_TOMATO, INIT_TOMATOES} from \"../actionTypes\";\r\n\r\nexport default (state:any[] = [], action) => {\r\n\tswitch(action.type){\r\n\t\tcase ADD_TOMATO:\r\n\t\t\treturn [action.payload,...state];\r\n\t\tcase UPDATE_TOMATO:\r\n\t\t\treturn state.map(t=>{\r\n\t\t\t\tif(t.id === action.payload.id){\r\n\t\t\t\t\treturn action.payload\r\n\t\t\t\t}else{\r\n\t\t\t\t\treturn t\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\tcase INIT_TOMATOES:\r\n\t\t\treturn [...action.payload]\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}","import { createStore } from 'redux'\r\nimport rootReducer from './reducers'\r\nconst store = createStore(rootReducer)\r\n\r\nexport default store","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Provider } from 'react-redux';\r\nimport store from './Redux/Store'\r\n\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>\r\n    , document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import React from \"react\";\r\nimport {\r\n  Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\nimport SignUp from './component/SignUp/SignUp'\r\nimport LogIn from './component/LogIn/LogIn'\r\nimport Home from './component/Home/Home'\r\nimport history from './config/history'\r\n\r\n\r\nexport default function App() {\r\n  return (\r\n    <Router history={history}>\r\n      <div>\r\n        <nav>\r\n          <ul>\r\n            <li>\r\n              <Link to=\"/\">Home</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/SignUp\">SignUp</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/LogIn\">LogIn</Link>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n\r\n        {/* A <Switch> looks through its children <Route>s and\r\n            renders the first one that matches the current URL. */}\r\n        <Switch>\r\n          <Route path=\"/LogIn\" component={LogIn}>\r\n          </Route>\r\n          <Route path=\"/SignUp\" component={SignUp}>\r\n          </Route>\r\n          <Route path=\"/\" component={Home}>\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\n\r\n\r\n"],"sourceRoot":""}